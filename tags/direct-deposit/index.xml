<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Direct Deposit on 0x000216</title><link>https://Nexus-Security.github.io/tags/direct-deposit/</link><description>Recent content in Direct Deposit on 0x000216</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 19 Jul 2023 10:34:21 +0000</lastBuildDate><atom:link href="https://Nexus-Security.github.io/tags/direct-deposit/index.xml" rel="self" type="application/rss+xml"/><item><title>Importing tables is not always seen as the less attractive option.</title><link>https://Nexus-Security.github.io/importing-tables-is-not-always-seen-as-the-less-attractive-option/</link><pubDate>Wed, 19 Jul 2023 10:34:21 +0000</pubDate><guid>https://Nexus-Security.github.io/importing-tables-is-not-always-seen-as-the-less-attractive-option/</guid><description>I usually avoid using table imports and prefer alternative methods like Integration Manager, direct SQL queries, or eConnect whenever possible. However, I&amp;rsquo;m reminded from time to time about the simplicity and effectiveness of this approach.
Recently, I&amp;rsquo;ve been working on a project with a tight deadline, striving to minimize manual data entry. I encountered several instances where Integration Manager wasn&amp;rsquo;t suitable for importing data, making table import a valuable solution. I successfully used it to import data into straightforward tables like:</description></item><item><title>Directly depositing direct deposit information</title><link>https://Nexus-Security.github.io/directly-depositing-direct-deposit-information/</link><pubDate>Tue, 20 Sep 2022 19:13:44 +0000</pubDate><guid>https://Nexus-Security.github.io/directly-depositing-direct-deposit-information/</guid><description>When implementing payroll for smaller companies (fewer than 250 employees), manual data entry might be acceptable and even beneficial for data accuracy. However, with larger implementations, like my current project involving over 1500 employees across three companies, manual entry isn&amp;rsquo;t feasible.
While integration tools help import most payroll data, direct deposit information requires extra caution. It&amp;rsquo;s crucial to avoid errors in account and routing numbers, making manual entry risky. Therefore, I use table imports for this specific data.</description></item><item><title>Ouch, Editing Direct Deposit Files</title><link>https://Nexus-Security.github.io/ouch-editing-direct-deposit-files/</link><pubDate>Sun, 10 Jul 2022 07:51:26 +0000</pubDate><guid>https://Nexus-Security.github.io/ouch-editing-direct-deposit-files/</guid><description>Generating ACH files in Dynamics GP can be tricky. Providing incorrect information, such as a wrong routing or account number, or voiding a direct deposit after payroll posting, results in an inaccurate ACH file.
The standard solution is voiding and re-running the entire payroll with the correct information. While this works for smaller companies, it&amp;rsquo;s not ideal for larger companies with substantial payrolls.
Manually editing the ACH file used to be a solution, but recent encoding changes, specifically &amp;ldquo;hash&amp;rdquo; entries created during file generation in GP, make this unreliable.</description></item></channel></rss>