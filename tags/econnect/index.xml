<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Econnect on 0x000216</title><link>https://Nexus-Security.github.io/tags/econnect/</link><description>Recent content in Econnect on 0x000216</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 09 May 2024 21:33:55 +0000</lastBuildDate><atom:link href="https://Nexus-Security.github.io/tags/econnect/index.xml" rel="self" type="application/rss+xml"/><item><title>eConnect "System Error", Part Two</title><link>https://Nexus-Security.github.io/econnect-system-error-part-two/</link><pubDate>Thu, 09 May 2024 21:33:55 +0000</pubDate><guid>https://Nexus-Security.github.io/econnect-system-error-part-two/</guid><description>In a previous blog post from January, I discussed encountering the frustrating &amp;ldquo;System Error&amp;rdquo; message while working with eConnect 9. Surprisingly, this error resurfaced recently during an integration project.
Initially, I had implemented a SqlException error handler within my eConnect calls, which had effectively addressed the issue. However, the &amp;ldquo;System Error&amp;rdquo; message reappeared while working on a new integration with eConnect 9.
Interestingly, the integration worked flawlessly when developed in GP 10.</description></item><item><title>Choosing unique node values from an eConnect XML document</title><link>https://Nexus-Security.github.io/choosing-unique-node-values-from-an-econnect-xml-document/</link><pubDate>Sun, 10 Mar 2024 02:17:32 +0000</pubDate><guid>https://Nexus-Security.github.io/choosing-unique-node-values-from-an-econnect-xml-document/</guid><description>I&amp;rsquo;m currently engrossed in a large-scale project that involves importing a massive volume of transactions, exceeding 7 million, into Dynamics GP using eConnect.
To streamline the process, the client provided the data in XML format, allowing me to import transactions by directly sending the XML to eConnect. While this method has advantages, it also presents some hurdles.
One challenge involves the client including the Batch Number within the XML data. This normally wouldn&amp;rsquo;t be a problem, but a separate requirement necessitates that I identify each batch number generated from each XML file.</description></item><item><title>Leveraging eConnect for importing Inventory Adjustments with Multi-Bin functionality.</title><link>https://Nexus-Security.github.io/leveraging-econnect-for-importing-inventory-adjustments-with-multi-bin-functionality/</link><pubDate>Wed, 17 Jan 2024 04:57:26 +0000</pubDate><guid>https://Nexus-Security.github.io/leveraging-econnect-for-importing-inventory-adjustments-with-multi-bin-functionality/</guid><description>I recently addressed a question on the Dynamics GP Developer forum about an eConnect issue. The problem involved importing inventory adjustments with multiple bins.
The developer successfully imported positive adjustments, but negative adjustments resulted in a &amp;ldquo;The QTY entered has to be &amp;gt; 0&amp;rdquo; error.
Exploring the GP Item Transaction Entry window revealed the root of the problem.
This window is unusual in GP because it allows negative quantities. While enjoyable, this feature isn&amp;rsquo;t consistent throughout GP.</description></item><item><title>Error message: Unable to create SSPI context</title><link>https://Nexus-Security.github.io/error-message-unable-to-create-sspi-context/</link><pubDate>Wed, 01 Nov 2023 02:06:10 +0000</pubDate><guid>https://Nexus-Security.github.io/error-message-unable-to-create-sspi-context/</guid><description>A client encountered a &amp;ldquo;Cannot generate SSPI context&amp;rdquo; error with their eConnect integration. This error typically signals a problem with Windows authentication on the SQL Server.
Troubleshooting began by checking basic network connectivity between the workstation and the SQL server using ping commands to verify DNS resolution. When those checks showed no issues, the focus shifted to the SQL Server service&amp;rsquo;s configuration.
Investigating the SQL Server service revealed it was configured to run under the domain Administrator account â€“ a practice generally discouraged.</description></item><item><title>Error in eConnect: Unable to call remote RPC method</title><link>https://Nexus-Security.github.io/error-in-econnect-unable-to-call-remote-rpc-method/</link><pubDate>Fri, 15 Sep 2023 03:12:43 +0000</pubDate><guid>https://Nexus-Security.github.io/error-in-econnect-unable-to-call-remote-rpc-method/</guid><description>This problem resembles previous discussions on DTC and network configurations, as highlighted here and here. DTCPing again proved useful in troubleshooting.
The client was using eConnect on a docked laptop with both wireless and wired connections. DTCPing from the client to the server worked, but the server&amp;rsquo;s DTCPing to the client resulted in a &amp;ldquo;gethostbyname failure&amp;rdquo; error.
The laptop&amp;rsquo;s wireless card had an address on a different subnet than the wired connection.</description></item><item><title>Quirks in GL Batch when importing bank transactions using eConnect</title><link>https://Nexus-Security.github.io/quirks-in-gl-batch-when-importing-bank-transactions-using-econnect/</link><pubDate>Sun, 04 Jun 2023 23:06:06 +0000</pubDate><guid>https://Nexus-Security.github.io/quirks-in-gl-batch-when-importing-bank-transactions-using-econnect/</guid><description>I recently consolidated several Dynamics GP companies into a single database using eConnect. This involved bringing in all outstanding bank transactions, like uncleared deposits, uncleared transactions, and even undeposited cash receipts.
Getting all the bank transaction types mapped correctly required some coding, but the import ultimately went smoothly. To avoid impacting the general ledger, I disabled both &amp;ldquo;Post To&amp;rdquo; and &amp;ldquo;Post Through&amp;rdquo; for Bank Deposits and Bank Transactions. After importing the data into the new production company, we verified the counts and amounts, which all looked fine.</description></item><item><title>eConnect Error: "The transaction has already been committed or aborted.</title><link>https://Nexus-Security.github.io/econnect-error-the-transaction-has-already-been-committed-or-aborted/</link><pubDate>Tue, 27 Dec 2022 00:51:37 +0000</pubDate><guid>https://Nexus-Security.github.io/econnect-error-the-transaction-has-already-been-committed-or-aborted/</guid><description>A client encountered an error (&amp;ldquo;The transaction has already been implicitly or explicitly committed or aborted.&amp;rdquo;) with their previously functional eConnect integration after a server migration to a new data center. This error, lacking detailed information, occurs during the eConnect_EntryPoint call when creating a new GL account.
Two potential solutions were explored. The first, adding &amp;ldquo;Enlist=False&amp;rdquo; to the eConnect connection string, resolved the error but was identified as a workaround that disables transactions and might lead to data corruption.</description></item><item><title>Fixing the "System Error" Message in eConnect</title><link>https://Nexus-Security.github.io/fixing-the-system-error-message-in-econnect/</link><pubDate>Sat, 26 Nov 2022 12:16:51 +0000</pubDate><guid>https://Nexus-Security.github.io/fixing-the-system-error-message-in-econnect/</guid><description>I&amp;rsquo;ve been creating eConnect integrations for a client, and while they work perfectly on my system, they sometimes fail on the client&amp;rsquo;s server with a generic &amp;ldquo;System Error&amp;rdquo; message.
After some investigation, I realized this often happens when a required eConnect field is missing data. However, other times the cause remained unclear.
I revisited the GP Knowledge Base and found article 943133, which I somehow missed before. It turns out my .</description></item><item><title>Frustration with integrating project accounting: Customer project information</title><link>https://Nexus-Security.github.io/frustration-with-integrating-project-accounting-customer-project-information/</link><pubDate>Fri, 18 Nov 2022 22:55:04 +0000</pubDate><guid>https://Nexus-Security.github.io/frustration-with-integrating-project-accounting-customer-project-information/</guid><description>Steve Endow wrote this two-part blog post about managing unique numbering for records, using an example from his project accounting integration with eConnect.
Endow&amp;rsquo;s integration pulls four columns of data from an Excel file to create records in GP, setting up projects from the customer level to the budget. However, he encountered an unexpected problem with the PA Customer Options window, which, though simple, isn&amp;rsquo;t automatically set up by eConnect. This window has a &amp;ldquo;Customer Alias&amp;rdquo; field, limited to five characters, which becomes problematic when dealing with many sequentially numbered customers.</description></item><item><title>Mysterious eConnect Error: The stored procedure does not exist. Be mindful of your schemas!</title><link>https://Nexus-Security.github.io/mysterious-econnect-error-the-stored-procedure-does-not-exist-be-mindful-of-your-schemas/</link><pubDate>Sat, 22 Oct 2022 16:48:37 +0000</pubDate><guid>https://Nexus-Security.github.io/mysterious-econnect-error-the-stored-procedure-does-not-exist-be-mindful-of-your-schemas/</guid><description>During a Dynamics GP Visual Studio Tools AddIn upgrade from GP 9 to GP 2010, a peculiar eConnect error surfaced after a smooth installation on the client server. The error indicated a non-existent stored procedure, &amp;rsquo;taCreatePayrollBatchHeaderInsert&amp;rsquo;, despite it being present in the SQL database.
Verification of the eConnect domain user&amp;rsquo;s SQL Login and user setup for the company database, including permissions, showed no discrepancies. Debugging the database connection string revealed the correct GP company database was being referenced.</description></item><item><title>If you're developing with XML, it's essential to have a good understanding of XPath.</title><link>https://Nexus-Security.github.io/if-you-re-developing-with-xml-it-s-essential-to-have-a-good-understanding-of-xpath/</link><pubDate>Sat, 08 Oct 2022 21:05:56 +0000</pubDate><guid>https://Nexus-Security.github.io/if-you-re-developing-with-xml-it-s-essential-to-have-a-good-understanding-of-xpath/</guid><description>My recent experience working on a VB .NET application highlighted the importance of using XPath for XML manipulation. While I recognize my own development shortcomings, encountering code that interacts with XML without leveraging XPath is truly baffling. If you handle XML in your work, investing a few hours learning XPath is essential.
My XML journey began in 1999 with MSXML3, employing DOM and XPath extensively, and later utilizing XSLT for complex web transformations.</description></item><item><title>The application configuration is incorrect, causing the VS 2008 .NET 3.5 Integration Error and preventing the application from starting.</title><link>https://Nexus-Security.github.io/the-application-configuration-is-incorrect-causing-the-vs-2008-net-3-5-integration-error-and-preventing-the-application-from-starting/</link><pubDate>Sat, 08 Oct 2022 06:50:17 +0000</pubDate><guid>https://Nexus-Security.github.io/the-application-configuration-is-incorrect-causing-the-vs-2008-net-3-5-integration-error-and-preventing-the-application-from-starting/</guid><description>After deploying a new .NET integration for Dynamics GP, a &amp;ldquo;failed to start&amp;rdquo; error message appeared upon launching the application on the client&amp;rsquo;s server. Event log entries indicated &amp;ldquo;Syntax error in manifest or policy file&amp;rdquo; and &amp;ldquo;The application failed to launch because of an invalid manifest.&amp;rdquo;
Previous .NET integrations developed with Visual Studio 2005 and .NET 2.0 worked correctly. However, this integration used Visual Studio 2008, .NET 3.5, and .NET LINQ extensions.</description></item><item><title>I have learned more than I ever expected about eConnect and MSDTC.</title><link>https://Nexus-Security.github.io/i-have-learned-more-than-i-ever-expected-about-econnect-and-msdtc/</link><pubDate>Thu, 23 Jun 2022 22:57:47 +0000</pubDate><guid>https://Nexus-Security.github.io/i-have-learned-more-than-i-ever-expected-about-econnect-and-msdtc/</guid><description>In a previous post, I talked about an eConnect error that said &amp;ldquo;The transaction has already been implicitly or explicitly committed or aborted.&amp;rdquo;
I discovered that adding the parameter &amp;ldquo;Enlist=False&amp;rdquo; to the eConnect transaction string could sometimes resolve the error. However, this fix wasn&amp;rsquo;t ideal as it could lead to incomplete transaction processing. Another potential solution was changing the MSDTC Transaction Manager Communication security setting to &amp;ldquo;No Authentication Required.&amp;rdquo; Lastly, firewall or network configuration issues were also identified as potential culprits.</description></item><item><title>The object name 'DYNAMICS..taErrorCode' is not valid.</title><link>https://Nexus-Security.github.io/the-object-name-dynamics-taerrorcode-is-not-valid/</link><pubDate>Sun, 29 May 2022 00:11:50 +0000</pubDate><guid>https://Nexus-Security.github.io/the-object-name-dynamics-taerrorcode-is-not-valid/</guid><description>Was it a full moon or were there sunspots causing strange occurrences?
Just tonight, while setting up a new eConnect integration on a client&amp;rsquo;s development server, I encountered a strange problem.
Upon running the integration, I was greeted with an SQL Exception error stating: &amp;ldquo;Invalid object name &amp;lsquo;DYNAMICS..taErrorCode&amp;rsquo;&amp;rdquo;.
This was perplexing, as I have extensive experience with eConnect integrations and had never encountered this error before. My usual resources, Google and PartnerSource, provided no helpful solutions.</description></item></channel></rss>