<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Address Parsing on 0x000216</title><link>https://Nexus-Security.github.io/tags/address-parsing/</link><description>Recent content in Address Parsing on 0x000216</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 15 Nov 2023 04:21:55 +0000</lastBuildDate><atom:link href="https://Nexus-Security.github.io/tags/address-parsing/index.xml" rel="self" type="application/rss+xml"/><item><title>Address Parsing: Bringing Unstructured Addresses into Dynamics GP - Part 1</title><link>https://Nexus-Security.github.io/address-parsing-bringing-unstructured-addresses-into-dynamics-gp-part-1/</link><pubDate>Wed, 15 Nov 2023 04:21:55 +0000</pubDate><guid>https://Nexus-Security.github.io/address-parsing-bringing-unstructured-addresses-into-dynamics-gp-part-1/</guid><description>A few years back, I tackled a Dynamics GP implementation involving the migration of over 30,000 customer records from a legacy AS400 system. The client provided the customer data in text files, but the real challenge lay in the data structure.
The AS400 stored data in free-form text fields like ADDRESS1, ADDRESS2, without dedicated fields for city, state, or zip code. This lack of structure resulted in data inconsistencies, errors, and random notes, making a clean import challenging.</description></item></channel></rss>